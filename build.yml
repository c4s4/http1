# Build information
- build:       http1
  description: Build project http1
  extends:     ':python:python.yml'
  default:     [clean, test]
  alias:
    test:
    - check_env
    - py_test
    release:
    - py_clean
    - check_env
    - py_test
    - dist
    - upload
    - tag

# Build properties
- properties:
    name:        http1
    package:     :name
    version:     "0.2.0"
    author:      "Michel Casabianca"
    email:       "casa@sweetohm.net"
    license:     "Apache Software License"
    description: "http1 is an API to perform HTTP requests in a single call"
    py_chk_cfg:  "etc/pylint.cfg"

# Build targets
- target:      check_env
  description: Check that we are running in the project's Virtualenv
  script:
  - if: "`which python` !~ /^#{base}\/env\/bin\/python$/"
    then:
    - raise: "You are not running in the project's Virtualenv, aborting"
    else:
    - print: "You are running in the project's Virtualenv, please proceed"

- target:      dist
  description: Generate distribution archive
  script:
  - mkdir: :py_build_dir
  - erb:
      src:  "etc/setup.py.erb"
      dest: "#{py_build_dir}/setup.py"
  - cp:
      src:  "etc/MANIFEST.in"
      dest: :py_build_dir
  - cp:
      src:  "README.rst"
      dest: :py_build_dir
  - cp:
      src:  "LICENSE"
      dest: :py_build_dir
  - mkdir: "#{py_build_dir}/#{name}"
  - copy:
      root:     :py_src_dir
      includes: "**/*.py"
      dest:     "#{py_build_dir}/#{name}"
  - cd: :py_build_dir
  - "python setup.py sdist -d ."

- target:      upload
  depends:     dist
  description: Upload the distribution
  script:
  - cd: :py_build_dir
  - "python setup.py sdist -d . register upload"

- target:      tag
  description: Tag the release
  script:
  - "git tag -a 'RELEASE-#{version}' -m 'Release #{version}'"
  - "git push --tags"

